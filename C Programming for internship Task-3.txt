#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

// List of C keywords
const char* keywords[] = {
    "int", "float", "char", "if", "else", "while", "for", "do", "return", "void", "main"
};

int isKeyword(const char* word) {
    for (int i = 0; i < sizeof(keywords)/sizeof(keywords[0]); i++) {
        if (strcmp(word, keywords[i]) == 0)
            return 1;
    }
    return 0;
}

int isOperator(char ch) {
    return ch == '+' || ch == '-' || ch == '*' || ch == '/' || ch == '=' || ch == '>' || ch == '<';
}

void analyze(const char* filename) {
    FILE* file = fopen(filename, "r");
    if (!file) {
        printf("Unable to open file %s\n", filename);
        return;
    }

    char ch, buffer[100];
    int i = 0;

    while ((ch = fgetc(file)) != EOF) {
        // If character is a letter or digit, build a token
        if (isalnum(ch)) {
            buffer[i++] = ch;
        }
        // If separator or operator is encountered
        else if (isspace(ch) || isOperator(ch) || ch == ';' || ch == '(' || ch == ')') {
            buffer[i] = '\0';
            i = 0;

            if (strlen(buffer) > 0) {
                if (isKeyword(buffer))
                    printf("[Keyword]: %s\n", buffer);
                else if (isdigit(buffer[0]))
                    printf("[Constant]: %s\n", buffer);
                else
                    printf("[Identifier]: %s\n", buffer);
            }

            // Check for operator
            if (isOperator(ch)) {
                char next = fgetc(file);
                if ((ch == '=' && next == '=') || (ch == '>' && next == '=') || (ch == '<' && next == '=')) {
                    printf("[Operator]: %c%c\n", ch, next);
                } else {
                    printf("[Operator]: %c\n", ch);
                    ungetc(next, file); // put back the character
                }
            }
        }
    }

    fclose(file);
}

int main() {
    char filename[100];
    printf("Enter the filename: ");
    scanf("%s", filename);

    analyze(filename);
    return 0;
}